name: Python UI autotests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: choose tests set
        required: true
        type: choice
        default: smoke
        options:
          - smoke
          - regression
          - all

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - run: >
          ARTIFACT_ID=$(curl -L 
          -H "Accept: application/vnd.github+json" 
          -H "X-GitHub-Api-Version: 2022-11-28" 
          "https://api.github.com/repos/sergey-mazanik/eo_ui_project/actions/artifacts?name=allure-results" 
          | python3 -c "import sys, json; print(json.load(sys.stdin)['artifacts'][0]['id'])")
          &&
          curl -L
          -H "Accept: application/vnd.github+json"
          -H "Authorization: Bearer ${{ secrets.TOKEN }}"
          -H "X-GitHub-Api-Version: 2022-11-28"
          https://api.github.com/repos/sergey-mazanik/eo_ui_project/actions/artifacts/$ARTIFACT_ID/zip -o artifacts.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - name: Save allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  run-tests:
    runs-on: ubuntu-latest
    needs: download-history
    name: Run autotests
    steps:
      - name: Checkout autotests
        uses: actions/checkout@v4
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Run all tests
        if: "github.event.inputs.deployment_target == 'all'"
        run: pytest --alluredir=allure-results
        continue-on-error: true
      - name: Run smoke tests
        if: "github.event.inputs.deployment_target == 'smoke'"
        run: pytest -m smoke --alluredir=allure-results
        continue-on-error: true
      - name: Run regression tests
        if: "github.event.inputs.deployment_target == 'regression'"
        run: pytest -m regression --alluredir=allure-results
        continue-on-error: true
      - name: Save allure results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: run-tests
    name: Generate report
    steps:
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'
      - name: Install Allure
        run: sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz && sudo tar -zxvf allure-2.29.0.tgz -C /opt/ && sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Generate report
        run: allure generate -c allure-results -o _site
      - name: Save allure report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    name: Report publication
    runs-on: ubuntu-latest
    needs: generate-report
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
